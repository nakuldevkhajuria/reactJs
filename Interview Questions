Question 1: what is virtual DOM?
Solution: 
every time when, there is change in the state of UI elements, a new virtual
dom is created. and then the new virtual dom and previous virtual dom is compared.
this comparison is known as diffing.
Firstly, react created a copy of the orignal DOM, and calls it Virtual Dom.
Virtual DOM is synced with real DOM using ReactDOM library. this is kn as reconcilation
in the form of batches final virtual DOM sends data in batches to the real DOM.
Virtual DOM is fast, cause it will compare both the trees and only update the part
which is been changed, just like in GITHUB
Virtual DOM does not have the power to directly change anything on the page(HTML)
DOM is the data representation of the objects that comprise the structure and content
of a document on the web.
Virtual DOM will update the JSX if the page updates.

Question 2: what is SPA?
Solution:
Single page application is a web application, that dynamically rewrites
current webpage with new data from webservers.
actually SPA will only rerender the particular component, which we are 
accessing on the page, inplace of rerendering the whole page.
SPA architecture, flow
1. input URL, data request to the browser
2. URL Request, to the servers.
3. static assets, data from server to static asssests
4. sends HTML , css to the user interface
5. and sends Loads JS with the data. 
6. and renders the data and send to the browser.

 SPA that loads only a single web document,
 and then updates the body content of that single document via JavaScript APIs

Disadvantages:
SPA does not perform well with search engine optimization.
2. it uses alot of browser resources also.
3. security issues

Question 3: what is the difference between class and functional components?
Solution:

FUNCTIONAL COMPONENTS
1. A functional component is just a plain JavaScript pure function
 that accepts props as an argument and returns a React element(JSX).
2. There is no render method used in functional components.
3. Functional component run from top to bottom and once the 
function is returned it cant be kept alive.
4. Also known as Stateless components as they simply 
accept data and display them in some form, that they are 
mainly responsible for rendering UI.
5. React lifecycle methods (for example, componentDidMount)
 cannot be used in functional components.
6. Hooks can be easily used in functional components to make them Stateful.

example: const [name,SetName]= React.useState(‘ ‘)
7. Constructors are not used.

CLASS COMPONENTS
1. A class component requires you to extend from React. Component and
 create a render function which returns a React element.
2. It must have the render() method returning JSX (which is syntactically similar to HTML)
3. Class component is instantiated and different life cycle method is kept alive
 and being run and invoked depending on phase of class component.
4. Also known as Stateful components because they implement logic and state.
5. React lifecycle methods can be used inside class components (for example, componentDidMount).
6. It requires different syntax inside a class component to implement hooks.

example: constructor(props) {

   super(props);

   this.state = {name: ‘ ‘}

}
7. Constructor are used as it needs to store state. 

Question 4: What do u mean by state and its use in react?
Solution:
React component has built in object kn as state.
when ever the state changes , the component will rerender.
The state object is where we store properties value, that belongs to the component.
State is mutable, means it can be changed.

The state is an instance of React Component Class can be defined as an object of a 
set of observable properties that control the behavior of the component. In other words,
 the State of a component is an object that holds some information that may change over
 the lifetime of the component

To change the state we use
this.setState({name:"nakul"})
Question 5: What is JSX, and why do we use it instead of JS?
Solution:

JavaSript Syntax Extention or JavaScript XML
JSX allows us to write HTML elements in JavaScript and place them in the DOM without any
 createElement() and/or appendChild() methods. 
JavaScript XML is also faster than Javascript.
React modifies the DOM when ever the information is updated.
JSX converts HTML tags into React elements.

JSX is an extension to JavaScript which allows us to write XML-like syntax to
 define DOM elements, which are translated by Babel into vanilla JS. Webpack is
 responsible for bundling all of our components together and running a local development
 server to test our code in the browser.

Question 6: What is package.json?
Solution:
It is a meta-Data of the Project, which contains the packages used and there locations.
It is like a backbone for Nodejs.
It is a file which is only written in JSON, key and values in double quotes. if its a boolean
value then we dont use it.(true) no quotes.
The property “Dependencies” is one of the most important keys in our file and the entire 
reason to use this file. All the dependencies used in the project are listed here. 
When we install a package using NPM or yarn, using the commands
For example, running npm start in your command line will run react-scripts start behind 
the scenes. Similar is true for other attributes: build, test, etc.



